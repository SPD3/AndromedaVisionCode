// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4905.Vision.subsystems;

import org.usfirst.frc4905.Vision.RobotMap;
import org.usfirst.frc4905.Vision.commands.*;

import com.ctre.CANTalon;
import com.ctre.CANTalon.FeedbackDevice;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.networktables.NetworkTable;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon frontLeft = RobotMap.driveTrainFrontLeft;
    private final CANTalon frontRight = RobotMap.driveTrainFrontRight;
    private final CANTalon backLeft = RobotMap.driveTrainBackLeft;
    private final CANTalon backRight = RobotMap.driveTrainBackRight;
    
    private final double turningPTerm = 0.00001;

    private NetworkTable m_networkTable;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public DriveTrain() {
    		setCommonMotorParameters(frontLeft);
    		setCommonMotorParameters(frontRight);
    		setCommonMotorParameters(backLeft);
    		setCommonMotorParameters(backRight);
    		
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void turnDegrees(double degrees) {
    		double value = degrees*turningPTerm;
    		frontLeft.set(value);
    		frontRight.set(value);
    		backLeft.set(value);
    		backRight.set(value);
    }
    
    private void setCommonMotorParameters(CANTalon motorController) {
		motorController.reverseSensor(false);
		motorController.setFeedbackDevice(FeedbackDevice.CtreMagEncoder_Relative);
		motorController.setPosition(0);
		motorController.configNominalOutputVoltage(0, 0);
		motorController.configPeakOutputVoltage(12.0, -12.0);
		motorController.enableBrakeMode(true);
		motorController.setVoltageRampRate(48);
		motorController.changeControlMode(TalonControlMode.PercentVbus);
		motorController.setProfile(0);
		motorController.set(0);
	}
    private void initNetworkTable(String table){
    	//NetworkTable.setIPAddress("10.49.5.77");
    		m_networkTable = NetworkTable.getTable(table);
    }
    
    public double getAngleToTurnFromVision() {
    		initNetworkTable("Vision");
    		return m_networkTable.getNumber("angleToTurn",0);
    }
}

